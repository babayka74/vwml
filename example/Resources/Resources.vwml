options {
	language=__java__ {
  		package = "com.win.game.resources.model.vwml.mining"
  		path = "c:\var\vwml/resources/src"
  		author = "Groozman M.Z."
		project_name = "Resources"
  		description = "Resource mining simulation"
		beyond {
			fringe ias communication (
				out ias "com.win.game.model.fringe.gate.async.console.AsyncConsole"
				in ias "com.win.game.model.fringe.gate.async.console.AsyncConsole"
			)
			fringe services ias (
				math ias "com.vw.lang.beyond.java.fringe.gate.math.Math"
			)
		}
		conflictring {
			"{Ew.P1}.(Goal (GoalAchieved -1)).CommonD" conflicts ("{Ew.P2}.(Goal (GoalAchieved -1)).(WaitForIntention false).(Wish true).CommonD")
			"{Ew.P1}.GetAchieved.CommonAchieved" conflicts ("{Ew.P2}.Life.CommonAchieved")
		}
	}
}

module Resources {
	Ew ias (
		out ias communication.out.write;
		in ias communication.in.read;
		plus ias services.math.sum;
		inc ias services.math.inc;
		compare ias services.math.compare;
		D ias 1;
		S ias 0;
		Sgoal ias 100;
		dt ias 500;
		GoalAchieved ias P2.(GoalAchieved -1);
		CR ias nil;

		P1 ias (
			Life ias (
				Comparing~ Exe
				GetAchieved~ Exe
				(Goal GoalAchieved~)~ Exe
			);
			Comparing ias (CR ((Ew.S~ Ew.Sgoal~) Ew.compare~) Do)^;
			GetAchieved ias (
				CommonAchieved [
					(GoalAchieved (GoalAchieved CR~))^
				CommonAchieved ]				
			);
			(Goal (GoalAchieved 0)),(Goal (GoalAchieved 1)) ias ((Ew.S~) Ew.out~) Do;
			(Goal (GoalAchieved -1)) ias (
				(Ew.S ((Ew.S~ CommonD [ 
						       	Ew.D~ 
					      CommonD ]) Ew.plus~) Do)^
				((The S is Ew.S~) Ew.out~) Do
				Ew.dt~ Relax
				Life~ Exe
			);
		
			source lifeterm = Life~ Exe
		);

		P2 ias (
			Intention ias no;
			Life ias (
				CommonAchieved [
					(ActualGoal GoalAchieved~)^
				CommonAchieved ]
				(Goal ActualGoal~)~ Exe
			);
			(Goal (GoalAchieved 0)),(Goal (GoalAchieved 1)) ias doNothing;
			(Goal (GoalAchieved -1)) ias (
				(WaitForIntention true) ias doNothing;
				(WaitForIntention false) ias (
					(Wish false) ias doNothing;
					(Wish true) ias (
						CommonD [
							(Ew.D ((Ew.D~) Ew.inc~) Do)^
						CommonD ]
						(Intention no)^
						((The D increased to Ew.D~) Ew.out~) Do
					);
					(Wish (Intention~ yes) Ident)~ Exe
				);
				(Intention (() Ew.in~) Do)^
				(WaitForIntention (Intention~ nil) Ident)~ Exe 
				Life~ Exe
			);

			source lifeterm = Life~ Exe
		);

	);
}
                                  