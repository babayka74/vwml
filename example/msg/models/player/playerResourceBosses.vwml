module PlayerResourceBosses {
	MagicWorld ias (
		Player ias (
			Resources ias (
				/* Bosses of district */
				Bosses ias (
					BossesList ias ();
					// allows to add bosses in run-time
					AddBoss ias (
						// initialization phase
						InitAs ias oninit;
						// boss's id
						BId ias nil;
						// quartals controlled per boss
						Quartals ias 0;
						// quartal numeric id starts from
						QNIds ias 0;
						// bosses bribes range
						BBR ias ();

						(BossOfDistrict (BossOfDistrict BId~) defer) Born
						((BossOfDistrict BId~)->Owner Id~)^
						((BossOfDistrict BId~)->Quartals Quartals~)^
						((BossOfDistrict BId~)->QNIds QNIds~)^
						((BossOfDistrict BId~)->BBR BBR~)^
						((BossOfDistrict BId~)->InitAs InitAs~)^
						((BossOfDistrict BId~)->Id BId~)^
#if (verbose)
						((Creating boss (BossOfDistrict BId~)) Ew.Output~) Do
#endif
						(BossOfDistrict BId~)->Init~ Exe
						(BossesList (BossesList~ (BId~)) Join)^
					);
					BossUnInitialized ias (
						BLR ias (
							(BossesList () BLR~) FinishInterception
#if (verbose)
							((All bosses uninitialized) Ew.Output~) Do
#endif
							((Player Id~) Tx (ModeInfo.ModeMain~ partclosed Id~ (bosses))) Gate
						);
						B ias nil;
						(BossesList (BossesList~ (B~)) Substruct)^
#if (verbose)
						((Uninitialized boss (BossOfDistrict B~) left bosses BossesList~) Ew.Output~) Do
#endif
					);
					PostBossesCommand ias (
						Cmd ias exit;
						BS ias (
#if (verbose)
							((Cmd~ to boss (BossOfDistrict $~)) Ew.Output~) Do
#endif
							((Player Id~) Tx (ModeInfo.ModeBossOfDistrict~ Cmd~ $~ ())) Gate
						);
						(BossesList~ BS~) ForEach
					);
					Done ias (
						(BossesList () BossUnInitialized.BLR~) StartInterception
						(PostBossesCommand.Cmd exit)^
						PostBossesCommand~ Exe
					);
					Reset ias (
						(BossesList () BossUnInitialized.BLR~) StartInterception
						(PostBossesCommand.Cmd reset)^
						PostBossesCommand~ Exe
					);
					// adds initial bosses' set
					AddInitialSet ias (
						InitBossesNum ias 0;
						BossesInitFinished ias (
							(InitBossesNum 0 BossesInitFinished~) FinishInterception
#if (verbose)
							((Player Id~ initialized all bosses) Ew.Output~) Do							
#endif
							(InitSteps (InitSteps~ (bosses)) Substruct)^
						);
						BossInitialized ias (
							(InitBossesNum ((InitBossesNum~) Ew.DecValue~) Do)^
#if (verbose)
							((Player Id~ InitBossesNum~ left bosses) Ew.Output~) Do							
#endif
						);
						// creating and initializing bosses
						CIBL ias (
							(BId (Id~ $~))^
							(AddBoss.BId BId~)^
						        (AddBoss.QNIds (($~ Ew.BossOfDistrictConf.ControlledQuartals~) Ew.Mul~) Do)^
							(AddBoss.QNIds ((AddBoss.QNIds~ Ew.BossOfDistrictConf.GlobalStartQNum~) Ew.Sum~) Do)^
							(AddBoss.Quartals Ew.BossOfDistrictConf.ControlledQuartals~)^
							(AddBoss.InitAs oninit)^
							(AddBoss.BBR Ew.BossOfDistrictConf.BossOfDBribeRanges~)^
							AddBoss~ Exe
						);
						(InitBossesNum Ew.PlayerAccountConf.BossesOfDistrictPerPlayer~)^
#if (verbose)
						((Creating InitBossesNum~ bosses) Ew.Output~) Do
#endif
						(InitBossesNum 0 BossesInitFinished~) StartInterception
						(InitBossesNum~ CIBL~) Repeat
					);
				);
			);
		);
	);
}
