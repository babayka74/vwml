module BossOfDistrict {
	MagicWorld ias (
		BossOfDistrict ias (
			// player id
			Owner ias nil;
			// boss's quartals started from this id
			QNIds ias 0;
			// boss controls following number of quartals
			Quartals ias 0;
			// bosse's id (BossD <player id> <boss id>)
			Id ias nil;
			// list of quartals (sherifs)
			CQs ias ();
			// number of quartals 
			CQsNum ias 0;			
			// boss bribes ranges
			BBR ias ();
			// initialized during phase (oninit | runtime)
			InitAs ias oninit;
			// predefined quartals' configuration
			PQConf ias nil;
			// incoming command id and its params
			CommandId ias nil;
			CommandParams ias nil;
			// desired bribe
			DesiredBribe ias nil;
			Negotiated ias false;
			Initialized ias false;
			// initialization steps
			Init ias (
				// called when all boss's quartals are initialized
				Finished ias (
#if (verbose)
					((Boss Id~ of player Owner~ initialized with (DesiredBribe~ BBR~ QNIds~ Quartals~) and CQs~) Ew.Output~) Do
#endif
					(Initialized true)^
#if (release)
					(((bossofdistrict init done) (player Owner~) (boss Id~) (bribe (DesiredBribe~))) Ew.OutChannel~) Do
#endif
					((Player Owner~) Tx (ModeInfo.ModeBossOfDistrict~ bossinitialized Id~ ())) Gate
				);
				(Negotiated false)^
				(Initialized false)^
				(DesiredBribe BBR~ Random)^
				((Player Owner~)->(Resources)->(Quartals)->(ConstructBuilder)->B Id~)^
				(Player Owner~)->(Resources)->(Quartals)->ConstructBuilder~ Exe
				((Player Owner~)->(Resources)->(Quartals)->(Construct Id~)->R (Boss Id~))^
				((Player Owner~)->(Resources)->(Quartals)->(Construct Id~)->PId Owner~)^
				((Player Owner~)->(Resources)->(Quartals)->(Construct Id~)->M boss)^
				((Player Owner~)->(Resources)->(Quartals)->(Construct Id~)->F QNIds~)^
				((Player Owner~)->(Resources)->(Quartals)->(Construct Id~)->N Quartals~)^
				((Player Owner~)->(Resources)->(Quartals)->(Construct Id~)->CB Finished~)^
				((Player Owner~)->(Resources)->(Quartals)->(Construct Id~)->PQConf PQConf~)^
				(Player Owner~)->(Resources)->(Quartals)->(Construct Id~)~ Exe
			);
			Done ias (
				Finished ias (
					(CQs ()) FinishInterception
					(Initialized false)^
#if (release)
					(((bossofdistrict exit done) (player Owner~) (boss Id~)) Ew.OutChannel~) Do
#endif
					((Player Owner~) Tx (ModeInfo.ModeBossOfDistrict~ bossuninitialized Id~ (Negotiated~))) Gate
				);
				(CQs () Finished~) StartInterception
				Deactivate~ Exe
				((Player Owner~)->(Resources)->(Quartals)->(Construct Id~)) Release
			);
			Deactivate ias (
				(N false) ias (
					D ias ((Player Owner~) Tx (ModeInfo.ModeDeal~ releasequartal Owner~ ($~))) Gate;
					(CQs~ D~) ForEach
				);
				(N true) ias (
					Done.Finished~ Exe
				);
				(N (CQs~ ()) Ident)~ Exe
			);
			// add quartal under boss's supervision
			AddQuartal ias (
				Q ias nil;
				(CQs (CQs~ (Q~)) Join)^
#if (verbose)
				((Player Owner~ added quartal Q~ under boss Id~ supervision and quartals are CQs~) Ew.Output~) Do
#endif
#if (release)
				(((bossofdistrict addquartal done) (player Owner~) (boss Id~) (Q~)) Ew.OutChannel~) Do
#endif
			);
			// create and activate boss's quartal which is added in runtime
			ActivateQuartal ias (
				CB ias (
#if (release)
					(((bossofdistrict activatequartal done) (player Owner~) (boss Id~) (PQConf~)) Ew.OutChannel~) Do
#endif
				);
				PQConf ias nil;
				((Player Owner~)->(Resources)->(Quartals)->(Construct Id~)->R (Boss Id~))^
				((Player Owner~)->(Resources)->(Quartals)->(Construct Id~)->PId Owner~)^
				((Player Owner~)->(Resources)->(Quartals)->(Construct Id~)->M boss)^
				((Player Owner~)->(Resources)->(Quartals)->(Construct Id~)->F nil)^
				((Player Owner~)->(Resources)->(Quartals)->(Construct Id~)->N 0)^
				((Player Owner~)->(Resources)->(Quartals)->(Construct Id~)->CB CB~)^
				((Player Owner~)->(Resources)->(Quartals)->(Construct Id~)->PQConf PQConf~)^
				(Player Owner~)->(Resources)->(Quartals)->(Construct Id~)~ Exe
			);
			PublishQuartals ias (
				PQ ias (
					((Player Owner~) Tx (ModeInfo.ModeDeal~ linkquartal $~ ($~))) Gate
				);
				(CQs~ PQ~) ForEach
			);
			// pay bribe and send back list of quartals to player 
			PayBribe ias (
				B ias nil;
				BribeRT ias nil;
				BribeV ias nil;
				// performs actula payment
				Pay ias (
					(Result true) ias (
						(Negotiated true)^
#if (release)
						(((bossofdistrict paybribe done) (player Owner~) (boss Id~)) Ew.OutChannel~) Do
#endif
						// all quartals are controlled by player from now
						PublishQuartals~ Exe
						(CQs ())^
						((Player Owner~) Tx (ModeInfo.ModeBossOfDistrict~ exit Id~ ())) Gate
					);
					(Result false) ias (
#if (release)
						(((bossofdistrict paybribe failed noResources) (player Owner~) (boss Id~) (B~) (prc (Player Owner~)->(Resources)->(Account)->(Withdraw)->PRC~)) Ew.OutChannel~) Do
#endif
					);
					((Player Owner~)->(Resources)->(Account)->Value B~)^
					(Player Owner~)->(Resources)->(Account)->Withdraw~ Exe
					(Result (Player Owner~)->(Resources)->(Account)->Result~)~ Exe
				);
				// different resources
				(CRT false) ias (
#if (verbose)
					((Invalid resource type BribeRT~ requested (DesiredBribe~ 0) Get) Ew.Output~) Do				
#endif
#if (release)
					(((bossofdistrict paybribe failed invaildResource) (player Owner~) (boss Id~) (BribeRT~ (DesiredBribe~ 0) Get)) Ew.OutChannel~) Do
#endif
				);
				// same resources
				(CRT true) ias (
					// boss doesn't take bribe - too small
					(BB -1) ias (
#if (verbose)
						((The boss Id~ of player Owner~ did not take bribe B~ desired bribe is DesiredBribe~) Ew.Output~) Do
#endif
#if (release)
						(((bossofdistrict paybribe failed tooSmall) (player Owner~) (boss Id~) (bribe B~ DesiredBribe~)) Ew.OutChannel~) Do
#endif
					);
					(BB 0),(BB 1) ias Pay~ Exe;
					// boss's bribe
					(BB ((BribeV~ (DesiredBribe~ 1) Get) Ew.Compare~) Do)~ Exe
				);
				(BribeRT (B~ 1) Get)^
				(BribeV  (B~ 2) Get)^
				// check resource type
				(CRT (BribeRT~ (DesiredBribe~ 0) Get) Ident)~ Exe
			);
			PublishQInfo ias (
				I ias ();
				P ias (I (I~ (($~ (Quartal $~)->QInfo~))) Join)^;
				(I ())^
				(CQs~ P~) ForEach
#if (release)
				(((bossofdistrict quartalsinfo done) (player Owner~) (boss Id~) I~) Ew.OutChannel~) Do
#endif
			);
			ChangeBBR ias (
				BBR ias nil;
				(DesiredBribe BBR~)^
#if (release)
				(((bossofdistrict changebbr done) (player Owner~) (boss Id~) BBR~) Ew.OutChannel~) Do
#endif
			);
			// commands
			(Handle addquartal),(Handle linkquartal) ias (
				(AddQuartal.Q (CommandParams~ 0) Get)^
				AddQuartal~ Exe
			);
			(Handle activatequartal) ias (
				(ActivateQuartal.PQConf (CommandParams~ 0) Get)^
				ActivateQuartal~ Exe
			);
			(Handle paybribe) ias (
				(PayBribe.B (CommandParams~ 0) Get)^
				PayBribe~ Exe
			);
			(Handle quartalsinfo) ias PublishQInfo~ Exe;
			(Handle changebbr) ias (
				(ChangeBBR.BBR (CommandParams~ 0) Get)^
				ChangeBBR~ Exe
			);
			(Handle qinitialized) ias (
				((Player Owner~)->(Resources)->(Quartals)->(Construct Id~)->BQN (((Player Owner~)->(Resources)->(Quartals)->(Construct Id~)->BQN~) Ew.DecValue~) Do)^
#if (verbose)
				(((Player Owner~)->(Resources)->(Quartals)->(Construct Id~)->BQN~ left quartals to initialize boss Id~) Ew.Output~) Do
#endif
			);
			(Handle releasedquartal) ias (
				(Q (CommandParams~ 0) Get)^
#if (verbose)
				((Quartal Q~ released of boss Id~ left quartals CQs~) Ew.Output~) Do
#endif
				(CQs (CQs~ (Q~)) Substruct)^
			);
			(Handle exit),(Handle reset) ias Done~ Exe; 
			(Handle CommandId~)~ Exe
		);
	);
}
