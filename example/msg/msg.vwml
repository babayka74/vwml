options {
	language=__java__ {
  		package = "com.win.strategy.msg.vwml.model"
  		path = "c:\var\vwml/msg/src"
  		author = "Win Interactive"
		project_name = "MafiaStrategyGame"
  		description = "Mafia strategy game model"
		beyond {
			fringe communication ias (
				out ias "com.win.game.model.fringe.gate.async.console.AsyncConsole"
				in ias "com.win.game.model.fringe.gate.async.console.AsyncConsole"
				// outchannel ias "com.win.strategy.battle.vwml.gate.BMVWMLMoveBehaviorGate"
			)
			fringe services ias (
				math ias "com.vw.lang.beyond.java.fringe.gate.math.Math"
				graph ias "com.win.game.model.fringe.gate.algorithm.graphloader.GraphLoader"
			)
		}
	}
	conflictring {
		"[MagicWorld.Characters.Unit].MagicWorld.Player.Resources.Units.UnitsStateSetLocker" conflicts (
			"[MagicWorld.Characters.Unit].MagicWorld.Player.Resources.Units.UnitsStateSetLocker"
		)
		"[MagicWorld.Player].MagicWorld.BattleField.Fields.Build.LockOnBattleFieldBuilding" conflicts (
			"[MagicWorld.Player].MagicWorld.BattleField.Fields.Build.LockOnBattleFieldBuilding"
		)
	}
}

include "models/actors/attacker.vwml"
include "models/actors/characters.vwml"

include "models/actors/defender.vwml"

include "models/algorithm/DpfAPEx.vwml"
include "models/algorithm/pathFinder.vwml"

include "models/ew/ew.vwml"

include "models/modes/battle/attackbroker.vwml"
include "models/modes/battle/attackmanager.vwml"
include "models/modes/battle/battlefield.vwml"
include "models/modes/battle/battlefieldstop.vwml"
include "models/modes/battle/battlemanager.vwml"

include "models/modes/deal/playerdeal.vwml"
include "models/modes/deal/quartal.vwml"

include "models/modes/hiring/hiringAgency.vwml"
include "models/modes/hiring/hiringBroker.vwml"

include "models/modes/main/playermain.vwml"

include "models/modes/resourcemanager/unitResourceManager.vwml"

include "models/modes/banking/playerbanking.vwml"

include "models/player/player.vwml"
include "models/player/playersManager.vwml"

include "models/gbanker/globalBankerBroker.vwml"
include "models/gbanker/globalBanker.vwml"

include "models/services/services.vwml"

module msg {
	MagicWorld ias (
		StopTheWorld ias false;
		RPCounter ias 0;
		Manager ias (
			Command ias nil;
			Character ias nil;
			Id ias nil;
			UnitId ias nil;
			CommandMode ias nil;
			CommandId ias nil;
			Params ias nil;

			AddressedCharacters ias (manager pm player gbanker);
			StopAll ias (AutoCommands.Injection (AutoCommands.Injection~ ((manager 0 exit))) Join)^;
			/* command is propagated to player */
			PropagateCommand ias (
				(PlayersManager.CommandMode CommandMode~)^
                                (PlayersManager.PlayerId Id~)^
				(PlayersManager.CommandId CommandId~)^
				(PlayersManager.Destination UnitId~)^
				(PlayersManager.Params Params~)^
				PlayersManager~ Exe
			);
			(ManagerCommand false) ias (
				((Not manager command propagating) Ew.Output~) Do
				/* passes for processing */
				PropagateCommand~ Exe
			);
			// dispatches incoming request
			AddressedTo ias (
				(RightCharacter false) ias ((Invalid addressed character Character~) Ew.Output~) Do;
				(RightCharacter true) ias (
					// for game manager
					(To manager) ias (
						(Command delay) ias ((Params~ 0) Get) Relax;
						// stops game model
						(Command exit) ias (
							(StopTheWorld true)^
						);
						((manager command CommandId~) Ew.Output~) Do
						(Command CommandId~)~ Exe
					);
					// for players manager
					(To pm) ias (
						(PlayersManager.CommandMode CommandMode~)^
                                		(PlayersManager.PlayerId UnitId~)^
						(PlayersManager.CommandId CommandId~)^
						(PlayersManager.Destination 0)^
						(PlayersManager.Params nil)^
						PlayersManager~ Exe
					);
					// for concrete player
					(To player) ias (
						(PlayersManager.CommandMode CommandMode~)^
                                		(PlayersManager.PlayerId Id~)^
						(PlayersManager.CommandId CommandId~)^
						(PlayersManager.Destination UnitId~)^
						(PlayersManager.Params Params~)^
						PlayersManager~ Exe
					);
					// for global banker
					(To gbanker) ias (
						(GlobalBankerBroker.GBankerId Id~)^
						(GlobalBankerBroker.Mode CommandMode~)^
						(GlobalBankerBroker.CommandId CommandId~)^
						(GlobalBankerBroker.Params Params~)^
						GlobalBankerBroker~ Exe
					);
					(To Character~)~ Exe
				);
				(RightCharacter (AddressedCharacters~ Character~) In)~ Exe
 			);
			/* main loop where model waits for incoming commands and dispatches them */
			MainLoop ias (
				/* decomposes incoming command */
				ParseIncomingCommand ias (
					(Character (Command~ 0) Get)^
					(Id (Command~ 1) Get)^
					(CommandMode (Command~ 2) Get)^
					(CommandId (Command~ 3) Get)^
					(UnitId (Command~ 4) Get)^
					(Params (Command~ 5) Get)^
				);
				(Stop false) ias (
					(WaitForCommand true) ias (
						(NoAutoCommand false) ias (
							(R false) ias (
								(Command (AutoCommands.Injection~) First)^
								(AutoCommands.Injection (AutoCommands.Injection~) Rest)^
								(RPCounter ((RPCounter~) Ew.IncValue~) Do)^
								(AutoCommands.Injection (AutoCommands.Injection~ ((pm 0 nil playeradd RPCounter~ nil))) Join)^
								((The auto command Command~) Ew.Output~) Do
								ParseIncomingCommand~ Exe
								((The auto command Command~ character Character~) Ew.Output~) Do
								AddressedTo~ Exe
							);
							(R true) ias (
								(AutoCommands.Injection ())^
								1025 Bp
								MainLoop~ Exe
							);
							(R (RPCounter~ 2) Ident)~ Exe
						);
						(NoAutoCommand true) ias doNothing;
						(NoAutoCommand (AutoCommands.Injection~ ()) Ident)~ Exe
						MainLoop~ Exe
					);
					(WaitForCommand false) ias (
						ParseIncomingCommand~ Exe
						AddressedTo~ Exe
						MainLoop~ Exe
					);
					/* waiting for command, in non-blocking manner */ 
					(Command (() Ew.Input~) Do)^
					(WaitForCommand (Command~ nil) Ident)~ Exe
				);
				(Stop true) ias (
					((The manager stopped) Ew.Output~) Do
				);
				(Stop StopTheWorld~)~ Exe
			);

			source lifeterm = (
#if (debug)
				((The initialization time) Ew.Output~) Do
#endif
				3000 Relax
				((The game manager started) Ew.Output~) Do
				PlayersManager.Init~ Exe
				((The game manager waits for commands) Ew.Output~) Do
				MainLoop~ Exe
				3000 Relax
			) Exe
		);

		AutoCommands ias (
			Injection ias (
				(pm 0 nil playeradd 0 nil)
			);
		);

/*
  ===== TRANSFER RESOURCES AMONG PLAYERS ======
				(pm 0 nil playeradd 0 nil)
				(pm 0 nil playeradd 1 nil)
				(gbanker 0 transfer starttransfer none (0 1 (cost vodka 200)))
*/

/*
  ===== DEFENCE BUILDING and RECRUTING UNITS ======
				(pm 0 nil playeradd 0 nil)
				(manager 0 nil delay 0 (500))
				(player 0 hiring starthiring 0 (((cost vodka 200) (hiringtime 7000) (id (0 2))) ((kind skeleton) (attack (yes yes yes)) (defence (no no yes)))))
				(player 0 battle setmode builddefence ())
				(player 0 battle recruitunit (0 2) ())
				(player 0 battle dismissunit (0 2) ())
*/

/*
  ===== DEFENCE BUILDING and RECRUTING MULTIPLE UNITS and RESET BATTLEFIELD TO INITIAL STATE ======
				(pm 0 nil playeradd 0 nil)
				(manager 0 nil delay 0 (500))
				(player 0 hiring starthiring 0 (((cost vodka 200) (hiringtime 7000) (id (0 2))) ((kind skeleton) (attack (yes yes yes)) (defence (no no yes)))))
				(player 0 hiring starthiring 0 (((cost vodka 300) (hiringtime 3000) (id (0 3))) ((kind zombac) (attack (yes yes yes)) (defence (no no yes)))))
				(manager 0 nil delay 0 (500))
				(player 0 battle setmode builddefence ())
				(player 0 battle recruitunit (0 2) ())
				(player 0 battle recruitunit (0 3) ())
				(player 0 battle reset 0 ())
*/


/*
  ===== BUILDING ATTACKING GROUP and RESET IT TO INITIAL STATE ======
				(pm 0 nil playeradd 0 nil)
				(manager 0 nil delay 0 (500))
				(player 0 hiring starthiring 0 (((cost vodka 200) (hiringtime 7000) (id (0 2))) ((kind skeleton) (attack (yes yes yes)) (defence (no no yes)))))
				(player 0 hiring starthiring 0 (((cost vodka 300) (hiringtime 3000) (id (0 3))) ((kind zombac) (attack (yes yes yes)) (defence (no no yes)))))
				(manager 0 nil delay 0 (500))
				(player 0 attack recruitunit (0 2) ())
				(player 0 attack recruitunit (0 3) ())
                                (player 0 attack reset 0 ())
*/

/*
  ===== BUILDING ATTACKING GROUP and CREATING ADDITIONAL USER and TRYING TO ATTACK ======
				(pm 0 nil playeradd 0 nil)
				(manager 0 nil delay 0 (500))
				(player 0 hiring starthiring 0 (((cost vodka 200) (hiringtime 7000) (id (0 2))) ((kind skeleton) (attack (yes yes yes)) (defence (no no yes)))))
				(player 0 hiring starthiring 0 (((cost vodka 300) (hiringtime 3000) (id (0 3))) ((kind zombac) (attack (yes yes yes)) (defence (no no yes)))))
				(manager 0 nil delay 0 (7500))
				(player 0 attack recruitunit (0 2) ())
				(player 0 attack recruitunit (0 3) ())
				(manager 0 nil playeradd 1 nil)
				(manager 0 nil delay 0 (500))
				(player 0 attack prepareinvasion 0 (1))
				
/*
  ===== HIRING and CANCELING ======
				(pm 0 nil playeradd 0 nil)
				(manager 0 nil delay 0 (500))
				(player 0 hiring starthiring 0 (((cost vodka 200) (hiringtime 7000) (id (0 2))) ((kind skeleton) (attack (yes yes yes)) (defence (no no yes)))))
				(player 0 hiring cancelhiring (0 1) ())

*/

/*
  ===== ADDING and REMOVING PLAYER ======

				(pm 0 nil playeradd 0 nil)
				(manager 0 nil delay 0 (500)) 
				(player 0 nil exit 0 ())

*/


/*
   ===== DEAL   =====
				(pm 0 playeradd 0)
				(player 0 main setmode 0 deal)
				// create quartals for player 1
				(manager 0 createquartals 0 ())
				// publish intetion for player 0 and quartal 1
				(player 0 deal setintention 0 (1 open (100)))
				(player 0 deal setintention 0 (1 pay (950)))
*/

/*
   ===== ATTACK =====
				(player 0 main setmode 0 battle)
				(player 0 nil create 0 ( (type attacker)
						     (attack (yes yes yes))
						     (defence (no no yes))
						   ))
				(player 0 nil startpos 0 (0 39))
				(player 0 nil movetopos 0 ((17 10)))
				(player 0 nil go 0)

				(player 0 nil create 1 ( (type attacker)
						     (attack (yes yes yes))
						     (defence (no no yes))
						   ))
				(player 0 nil startpos 1 (5 39))
				(player 0 nil movetopos 1 ((17 10)))
				(player 0 nil go 1)
	
				(player 0 nil create 2 ( (type defender)
						     (attack (yes yes no))
						     (defence (yes yes yes yes))
						    ))
				(player 0 nil startpos 2 (15 29))
				(player 0 nil go 2)
*/
	);
}
