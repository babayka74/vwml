options {
	language=__java__ {
#if (standalone)
  		package = "com.win.strategy.msg.vwml.model"
  		path = "c:\var\vwml/msg/src"
#else
  		package = "com.win.strategy.msg.vwml.model"
  		path = "d:\svn.nt.lan\strategy\strategy-mmo\vwml-strategy-model\src\main\java"
#endif
  		author = "Win Interactive"
		project_name = "MafiaStrategyGame"
  		description = "Mafia strategy game model"
		beyond {
			fringe communication ias (
				out ias "com.win.game.model.fringe.gate.async.console.AsyncConsole"
				in ias "com.win.game.model.fringe.gate.async.console.AsyncConsole"
#if (standalone)
				strategyfringe ias "com.win.game.model.fringe.gate.async.console.AsyncConsole"
#else
				strategyfringe ias "com.win.strategy.msg.integration.gate.VWMLStrategyGate"
#endif
			)
			fringe services ias (
				math ias "com.vw.lang.beyond.java.fringe.gate.math.Math"
				graph ias "com.win.game.model.fringe.gate.algorithm.graphloader.GraphLoader"
				configuration ias "com.win.game.model.fringe.gate.configuration.loader.ConfigurationLoader"
				economic ias "com.win.game.model.fringe.gate.economic.Economic"
			)
		}
	}

	conflictring {
	}
}

include "models/actors/attacker.vwml"
include "models/actors/characters.vwml"
include "models/actors/charactersgroupmanager.vwml"

include "models/actors/defender.vwml"

include "models/algorithm/DpfAPEx.vwml"
include "models/algorithm/pathFinder.vwml"

include "models/ew/ew.vwml"

include "models/modes/battle/attackbroker.vwml"
include "models/modes/battle/attackmanager.vwml"
include "models/modes/battle/battlefield.vwml"
include "models/modes/battle/battlemanager.vwml"

include "models/modes/garage/garageDeal.vwml"

include "models/modes/deal/playerdeal.vwml"
include "models/modes/deal/quartal.vwml"

include "models/modes/hiring/hiringAgency.vwml"
include "models/modes/hiring/staffAgencyBehaviour.vwml"
include "models/modes/hiring/carAgencyBehaviour.vwml"
include "models/modes/hiring/hiringBroker.vwml"

include "models/modes/main/playermain.vwml"

include "models/modes/resourcemanager/unitResourceManager.vwml"

include "models/modes/banking/playercashier.vwml"
include "models/modes/banking/playerbanking.vwml"

include "models/player/playerResources.vwml"
include "models/player/player.vwml"
include "models/player/playersManager.vwml"

include "models/gbanker/globalBankerBroker.vwml"
include "models/gbanker/globalBanker.vwml"

include "models/services/services.vwml"

module msg {
	MagicWorld ias (
		StopTheWorld ias false;
		RPCounter ias 0;
		Manager ias (
			Command ias nil;
			Character ias nil;
			Id ias nil;
			UnitId ias nil;
			CommandMode ias nil;
			CommandId ias nil;
			Params ias nil;

			ExWCommandListener ias (
				Cmd ias nil;
				(StopTheWorld true) ias (
#if (verbose)
					((The command listener exited) Ew.Output~) Do
#endif
				);
				(StopTheWorld false) ias (
					(WaitForCommand true) ias (
						(NoAutoCommand false) ias (
							(Cmd (AutoCommands.Injection~) First)^
							(AutoCommands.Injection (AutoCommands.Injection~) Rest)^
#if (verbose)
							((The auto command Cmd~) Ew.Output~) Do
#endif
							(Manager Tx Cmd~) Gate
						);
						(NoAutoCommand true) ias (() Ew.InChannelBlockInput~) Do;
						(NoAutoCommand (AutoCommands.Injection~ ()) Ident)~ Exe
					);
					(WaitForCommand false) ias (
#if (verbose)
						((The command Cmd~ passed to Manager) Ew.Output~) Do
#endif
						(Manager Tx Cmd~) Gate
					);
					/* waiting for command, in non-blocking manner */ 
					(Cmd (() Ew.InChannel~) Do)^
					(WaitForCommand (Cmd~ nil) Ident)~ Exe
					ExWCommandListener~ Exe
				);
				(StopTheWorld StopTheWorld~)~ Exe
			);

			AddressedCharacters ias (manager pm player gbanker);
			StopAll ias (AutoCommands.Injection (AutoCommands.Injection~ ((manager 0 exit))) Join)^;
			// dispatches incoming request
			AddressedTo ias (
				(RightCharacter false) ias (
#if (verbose)
					((Invalid addressed character Character~) Ew.Output~) Do
#endif
				);
				(RightCharacter true) ias (
					// for game manager
					(To manager) ias (
						(Command delay) ias ((Params~ 0) Get nil nil Manager) Relax;
						// stops game model
						(Command exit) ias (
#if (verbose)
							((The game manager got exit command) Ew.Output~) Do
#endif
							(StopTheWorld true)^
							(() Ew.InChannelUnblockInput~) Do
						);
#if (verbose)
						((manager command CommandId~) Ew.Output~) Do
#endif
						(Command CommandId~)~ Exe
					);
					// for players manager
					(To pm) ias (
						(PlayersManager.CommandMode CommandMode~)^
                                		(PlayersManager.PlayerId UnitId~)^
						(PlayersManager.CommandId CommandId~)^
						(PlayersManager.Destination 0)^
						(PlayersManager.Params Params~)^
						PlayersManager~ Exe
					);
					// for concrete player
					(To player) ias (
						(PlayersManager.CommandMode CommandMode~)^
                                		(PlayersManager.PlayerId Id~)^
						(PlayersManager.CommandId CommandId~)^
						(PlayersManager.Destination UnitId~)^
						(PlayersManager.Params Params~)^
						PlayersManager~ Exe
					);
					// for global banker
					(To gbanker) ias (
						(GlobalBankerBroker.GBankerId Id~)^
						(GlobalBankerBroker.Mode CommandMode~)^
						(GlobalBankerBroker.CommandId CommandId~)^
						(GlobalBankerBroker.Params Params~)^
						GlobalBankerBroker~ Exe
					);
					(To Character~)~ Exe
				);
				(RightCharacter (AddressedCharacters~ Character~) In)~ Exe
 			);
			/* main loop where model waits for incoming commands and dispatches them */
			MainLoop ias (
				/* decomposes incoming command */
				ParseIncomingCommand ias (
					(Character (Command~ 0) Get)^
					(Id (Command~ 1) Get)^
					(CommandMode (Command~ 2) Get)^
					(CommandId (Command~ 3) Get)^
					(UnitId (Command~ 4) Get)^
					(Params (Command~ 5) Get)^
				);
				(Stop false) ias (
					(ready false) ias MainLoop~ Exe;
					(ready true) ias (
						(Command (Manager Rx) Gate)^
						ParseIncomingCommand~ Exe
						AddressedTo~ Exe
						MainLoop~ Exe
					);
					(ready ((Manager Ready) Gate true) Ident)~ Exe
				);
				(Stop true) ias (
#if (verbose)
					((The manager stopped) Ew.Output~) Do
#endif
				);
				(Stop StopTheWorld~)~ Exe
			);

			source lifeterm = (
#if (verbose)
				((The verbose mode is active) Ew.Output~) Do
#endif
#if (release)
				((The release initialization time) Ew.Output~) Do
#endif
				3000 Relax
#if (verbose)
				((Loading dynamic configurations) Ew.Output~) Do
#endif
				Ew.LoadConfiguration~ Exe
				((The game manager started) Ew.Output~) Do
				(Manager Register blocked) Gate
				PlayersManager.Init~ Exe
#if (verbose)
				((The game manager starts command listener as Ltt task) Ew.Output~) Do
#endif
				(ExWCommandListener) LTT
				MainLoop~ Exe
				3000 Relax
				(Manager Unregister) Gate
			) Exe
		);

		AutoCommands ias (
			Injection ias (
#if (unittest)

				(pm 0 playermanagment playeradd 0 nil)
				(manager 0 nil delay 0 (2500))
				(player 0 garage invest 0 ((cost vodka 150) 3000))


/*				(manager 0 nil delay 0 (2500))
				(player 0 hiring starthiring 0 (((cost vodka 200) (hiringtime 2000) (id (0 2))) ((kind skeleton) (clazz 1) (contain (vodka 20)) (capacity 5) (attack (yes yes yes)) (defence (no no yes)))))
				(manager 0 nil delay 0 (2500))
				(player 0 resourcemanager joinunits 0 ((0 1) (0 2)))
				(manager 0 nil delay 0 (2500))
				(player 0 resourcemanager disjoinunits 0 ((0 1)))
*/
				//(pm 0 playermanagment playeradd 1 nil)
				//(manager 0 nil delay 0 (2500))
				// ((1 (vodka 200))) => player 0 lost battle and tranfers 'loss = (vodka 200) * H' to player 1
				//(player 0 main extbattleresult 0 (1 (cost vodka)))

				//(player 0 hiring starthiring 0 (((cost vodka 200) (hiringtime 2000) (id (0 1))) ((kind skeleton) (clazz 1) (contain (vodka 20)) (attack (yes yes yes)) (defence (no no yes)))))
				//(player 1 hiring starthiring 0 (((cost vodka 200) (hiringtime 2000) (id (1 1))) ((kind skeleton) (clazz 1) (contain (vodka 40)) (attack (yes yes yes)) (defence (no no yes)))))

//				(player 0 main updatebusinessconf 0 ( (Factors ((vodka 1 1) (food 1 1 (gold 1 1) (viski 1 1)) ) (GDevelop 200) (GContain 30) (UnitsInfo ((zombak1 (clazz ((1 1) (2 0) (3 1)))) (skeleton (clazz ((1 1) (2 0) (3 3)))) (vampire (clazz ((1 0) (2 0) (3 0))))))))
//				(player 1 main updatebusinessconf 0 ( (Factors ((vodka 2 2) (food 2 2) (gold 2 2) (viski 2 2)) ) (GDevelop 300) (GContain 40) (UnitsInfo ((zombak1 (clazz ((1 2) (2 3) (3 4)))) (skeleton (clazz ((1 1) (2 0) (3 9)))) (vampire (clazz ((1 0) (2 0) (3 10))))))))
#endif
			);
		);

	);
}


