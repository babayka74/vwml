options {
	language=__java__ {
  		package = "com.win.strategy.battle.vwml.model"
  		path = "c:\var\vwml/battleModel3B/src"
  		author = "Win Interactive"
		project_name = "battleModel3B"
  		description = "Strategy battle model 3B"
		beyond {
			fringe communication ias (
				out ias "com.win.game.model.fringe.gate.async.console.AsyncConsole"
				in ias "com.win.game.model.fringe.gate.async.console.AsyncConsole"
				// outchannel ias "com.win.strategy.battle.vwml.gate.BMVWMLMoveBehaviorGate"
			)
			fringe services ias (
				math ias "com.vw.lang.beyond.java.fringe.gate.math.Math"
				graph ias "com.win.game.model.fringe.gate.algorithm.graphloader.GraphLoader"
			)
		}
	}
	conflictring {
          	"[MagicWorld.Player].MagicWorld.Characters.Unit.UnitAsDefender.Create.LockDefenders" conflicts (
			"[MagicWorld.Characters.Unit].MagicWorld.Characters.Attacker.ActivityStrategy.Actions.Attack.LockDefenders"
			"[MagicWorld.Characters.Unit].MagicWorld.Characters.Unit.UnitAsDefender.Destroy.LockDefenders"
		)
		"{MagicWorld.Player}.StopAllUnits.CheckForUnitsCompletition.Check.WaitForUnitsCompletitionLock" conflicts (
			"[MagicWorld.Characters.Unit].MagicWorld.Characters.Unit.UnitAsDefender.Destroy.LockDefenders"
			"[MagicWorld.Characters.Unit].MagicWorld.Characters.Unit.UnitAsAttacker.Destroy.LockAttackers"
		)
		"[MagicWorld.Characters.Unit].MagicWorld.Player.Resources.Units.UnitsStateSetLocker" conflicts (
			"[MagicWorld.Characters.Unit].MagicWorld.Player.Resources.Units.UnitsStateSetLocker"
		)
		"[MagicWorld.Characters.Unit].MagicWorld.PathFinder.UpdateUnitsSharedPath.RecalculatePathToAttacker.LockSharedStates" conflicts (
			"[MagicWorld.Characters.Unit].MagicWorld.Player.Resources.Units.UnitsStateSetLocker"
		)
		"[MagicWorld.Characters.Unit].MagicWorld.Characters.Defender.ActivityStrategy.Actions.Defence.Observe.LockAttackers" conflicts (
			"[MagicWorld.Player].MagicWorld.Characters.Unit.UnitAsAttacker.Create.LockAttackers"
			"[MagicWorld.Player].MagicWorld.Characters.Unit.UnitAsAttacker.Destroy.LockAttackers"
		)
		"{MagicWorld.Characters.Unit}.UnitAsAttacker.Destroy.LockAttackers" conflicts (
			"{MagicWorld.Characters.Unit}.UnitAsAttacker.Destroy.LockAttackers"
		)
	}
}

include "../algorithms/DpfAPEx/DpfAPEx.vwml"
include "ew.vwml"
include "services.vwml"
include "pathFinder.vwml"
include "quartal.vwml"
include "characters.vwml"
include "player.vwml"
include "attacker.vwml"
include "defender.vwml"

module battleModel3B {
	MagicWorld ias (
		StopTheWorld ias false;
		Manager ias (
			Command ias nil;
			Character ias nil;
			Id ias nil;
			UnitId ias nil;
			CommandMode ias nil;
			CommandId ias nil;
			Params ias nil;

			StopAll ias (AutoCommands.Injection (AutoCommands.Injection~ ((manager 0 exit))) Join)^;
			/* command is propagated to player */
			PropagateCommand ias (
				((Command CommandId~ is propagated to player Id~ to mode CommandMode~) Ew.Output~) Do
				// activating gate on player's side (Tx mode)
				((Player Id~) Tx (CommandMode~ CommandId~ UnitId~ Params~)) Gate
				((Command CommandId~ propagated to player Id~) Ew.Output~) Do
			);
			(ManagerCommand true) ias (
				// cretes player
				(Command playeradd) ias (
					(Player.Id UnitId~)^
					(Player.Stop false)^
					(Player (Player UnitId~)) Born
				);
				// creates initial set of quartals for player
				(Command createquartals) ias (
					QuartalId ias 0;
					ActivateQuartal ias (
						// quartal's configuration
						(Quartal.Id $~)^
						(Quartal.Owner Id~)^
						(Quartal (Quartal $~)) Born
						// links quartal to given player
						((Player UnitId~) Tx (Player.DealMode~ linkquartal UnitId~ ($~))) Gate
					);
					(Ew.QuartalsConf.QuartalsPerPlayer~ ActivateQuartal~) Repeat
				);
				// stops game model
				(Command exit) ias (
					(StopTheWorld true)^
				);
				((manager command CommandId~) Ew.Output~) Do
				(Command CommandId~)~ Exe
			);
			(ManagerCommand false) ias (
				((Not manager command propagating) Ew.Output~) Do
				/* passes for processing */
				PropagateCommand~ Exe
			);
			/* main loop where model waits for incoming commands and dispatches them */
			MainLoop ias (
				/* decomposes incoming command */
				ParseIncomingCommand ias (
					(Character (Command~ 0) Get)^
					(Id (Command~ 1) Get)^
					(CommandMode (Command~ 2) Get)^
					(CommandId (Command~ 3) Get)^
					(UnitId (Command~ 4) Get)^
					(Params (Command~ 5) Get)^
				);
				(Stop false) ias (
					(WaitForCommand true) ias (
						(NoAutoCommand false) ias (
							(Command (AutoCommands.Injection~) First)^
							(AutoCommands.Injection (AutoCommands.Injection~) Rest)^
							((The auto command Command~) Ew.Output~) Do
							ParseIncomingCommand~ Exe
							((The auto command Command~ character Character~) Ew.Output~) Do
							(ManagerCommand (Character~ manager) Ident)~ Exe
						);
						(NoAutoCommand true) ias doNothing;
						(NoAutoCommand (AutoCommands.Injection~ ()) Ident)~ Exe
						MainLoop~ Exe
					);
					(WaitForCommand false) ias (
						ParseIncomingCommand~ Exe
						(ManagerCommand (Character~ manager) Ident)~ Exe
						MainLoop~ Exe
					);
					/* waiting for command, in non-blocking manner */ 
					(Command (() Ew.Input~) Do)^
					(WaitForCommand (Command~ nil) Ident)~ Exe
				);
				(Stop true) ias (
					((The manager stopped) Ew.Output~) Do
				);
				(Stop StopTheWorld~)~ Exe
			);

			source lifeterm = (
#if (debug)
				((The initialization time) Ew.Output~) Do
#endif
				3000 Relax
				(ModeInfo.AvailableModes ModeInfo.AvailableModes~ Exe)^
				((The game manager started and loads maze) Ew.Output~) Do
				Ew.Maze~ Exe
				((The game manager waits for commands) Ew.Output~) Do
				MainLoop~ Exe
				3000 Relax
			) Exe
		);

		AutoCommands ias (
			Injection ias (
				(manager 0 playeradd 0)
				(player 0 exit 0 ())
			);
		);

/*
   ===== DEAL   =====
				(manager 0 playeradd 0)
				(player 0 main setmode 0 deal)
				// create quartals for player 1
				(manager 0 createquartals 0 ())
				// publish intetion for player 0 and quartal 1
				(player 0 deal setintention 0 (1 open (100)))
				(player 0 deal setintention 0 (1 pay (950)))
*/

/*
   ===== ATTACK =====
				(player 0 attack create 0 ( (type attacker)
						     (attack (yes yes yes))
						     (defence (no no yes))
						   ))
				(player 0 attack startpos 0 (0 39))
				(player 0 attack movetopos 0 ((17 10)))
				(player 0 attack go 0)

				(player 0 attack create 1 ( (type attacker)
						     (attack (yes yes yes))
						     (defence (no no yes))
						   ))
				(player 0 attack startpos 1 (5 39))
				(player 0 attack movetopos 1 ((17 10)))
				(player 0 attack go 1)
	
				(player 0 attack create 2 ( (type defender)
						     (attack (yes yes no))
						     (defence (yes yes yes yes))
						    ))
				(player 0 attack startpos 2 (15 29))
				(player 0 attack go 2)
*/
	);
}
