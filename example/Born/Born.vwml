options {
	language=__java__ {
  		package = "com.win.game.born.model.vwml.born"
  		path = "c:\var\vwml/born/src"
  		author = "Groozman M.Z."
		project_name = "Resources"
  		description = "Born simulation"
		beyond {
			fringe communication ias (
				out ias "com.win.game.model.fringe.gate.async.console.AsyncConsole"
				in ias "com.win.game.model.fringe.gate.async.console.AsyncConsole"
			)
			fringe services ias (
				math ias "com.vw.lang.beyond.java.fringe.gate.math.Math"
			)
		}
	}
}

module BornSimulation {
	Ew ias (
		out ias communication.out.write;
		in ias communication.in.read;
		inc ias services.math.inc;
		Id ias 0;
		W ias 8;

		AAA ias (
			(x 2) ias 9;
			k ias 0;
			m ias k;
			z ias (x 2);
		);

		P1 ias (
			Id ias 0;
			Life ias (
				X ias (l m n k x);
				XT ias (
					($~ Id~)^
					(($~~) Ew.out~) Do
				);
				M ias ((a Id~)^ (b Id~)^ (c Id~)^ (d Id~)^ (e Id~)^);
				MT ias (
					(X~ XT~) ForEach
					$~ Exe
					((Id Id~ and M.a~ M.b~ M.c~ M.d~ M.e~) Ew.out~) Do
				);
				((I am here Id~) Ew.out~) Do
				(AAA (AAA Id~)) Born
				((AAA Id~)->k Id~)^
				1025 Bp
				((z is (AAA Id~)->z~~) Ew.out~) Do
				((m is (AAA Id~)->m~~) Ew.out~) Do
				((k is (AAA Id~)->k~) Ew.out~) Do
				((l Id~) Id~)^
				((The l is (l Id~)~) Ew.out~) Do
				(M~ MT~) ForEach
				1000 Relax
				((AAA Id~)) Release
			);		
			lifeterm = (
				Life~ Exe
				((Id~ says bye) Ew.out~) Do
			) Exe
		);

		Life ias (
			(StopBorn true) ias (
				((Cloner stops) Ew.out~) Do
			);
			(StopBorn false) ias (
				(Ew.Id ((Ew.Id~) Ew.inc~) Do)^
				(P1 (P1 Ew.Id~) defer) Born
				((P1 Ew.Id~)->Id Ew.Id~)^
				((P1 Ew.Id~)) Activate
				Life~ Exe
			);
			(StopBorn (Ew.Id~ 1) Ident)~ Exe
		);

		source lifeterm = (
			Life~ Exe
			15000 Relax
		) Exe
	);
}
                                  